{"version":3,"sources":["api.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEjC,IAAI,IAAI,GAAG,UAAU,CAAC;AACtB,IAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,IAAI,eAAe,GAAG,EAAE,CAAC,IAAI,CAAC,WAAU,UAAU,EAAE,IAAI,EAAE;;AAExD,MAAI,OAAO,GAAG,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,UAAU,CAAC;AACzD,MAAI,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,kBAAkB,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE1G,MAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/C,MAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACzB,MAAI;AACF,WAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GACzB,CAAC,OAAO,CAAC,EAAE;AACV,QAAI,GAAG,GAAG,IAAI,KAAK,CAAC,wCAAwC,GAAG,IAAI,CAAC,CAAC;AACrE,UAAM,GAAG,CAAC;GACX;CACF,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG;AACf,iBAAe,EAAf,eAAe,EAChB,CAAC","file":"api.js","sourcesContent":["/**\n * Makes an API call to exp.host\n *\n */\n\nvar co = require('co');\nvar instapromise = require('instapromise');\nvar request = require('request');\n\nvar HOST = 'exp.host';\nvar PORT = 80;\n\nvar callMethodAsync = co.wrap(function*(methodName, args) {\n  // TODO: Make this configurable at some point\n  var baseUrl = 'http://' + HOST + ':' + PORT + '/__api__';\n  var url = baseUrl + '/' + encodeURIComponent(methodName) + '/' + encodeURIComponent(JSON.stringify(args));\n  //console.log(\"url=\", url);\n  var response = yield request.promise.post(url);\n  var body = response.body;\n  try {\n    return JSON.parse(body);\n  } catch (e) {\n    var err = new Error(\"Unparseable response from API server: \" + body);\n    throw err;\n  }\n});\n\nmodule.exports = {\n  callMethodAsync,\n};\n"],"sourceRoot":"/source/"}