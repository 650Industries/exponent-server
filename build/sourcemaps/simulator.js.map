{"version":3,"sources":["simulator.js"],"names":[],"mappings":"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","file":"simulator.js","sourcesContent":["var _ = require('lodash-node');\nvar child_process = require('child_process');\nvar inquirerAsync = require('inquirer-async');\nvar instapromise = require('instapromise');\nvar path = require('path');\n\nvar log = require('./log');\n\nfunction SimulatorError(code, message) {\n  var err = new Error(message);\n  err.code = code;\n  err._isSimulatorError = true;\n  return err;\n}\n\nfunction SimulatorNotAvailable(e) {\n  return SimulatorError('SIMULATOR_NOT_AVAILABLE', \"Simulator not available: \" + e.message);\n}\n\nasync function listSimulatorsAsync() {\n  try {\n    var output = await child_process.promise.exec('xcrun simctl list devices');\n  } catch (e) {\n    throw SimulatorNotAvailable(e);\n  }\n\n  var lines = output.split(\"\\n\");\n  var devices = [];\n\n  var runtime;\n  for (var line of lines) {\n    var m = line.match(/^-- ([^-]+) --$/);\n    if (m) {\n      runtime = m[1];\n      if (runtime.match(/^Unavailable: /)) {\n        runtime = undefined;\n      }\n    }\n    if (runtime) {\n      var m = line.match(/^[\\s]*([^\\(]+) \\(([0-9A-F-]+)\\).*/);\n      var unavailable = line.match(/unavailable/);\n      if (m && !unavailable) {\n        devices.push({\n          device: m[1],\n          udid: m[2],\n          runtime,\n        });\n      }\n    }\n  }\n\n  return devices;\n\n}\n\nasync function listSimulatorsAndTemplatesAsync() {\n  try {\n    var output = await child_process.promise.exec('xcrun instruments -s');\n  } catch (e) {\n    throw SimulatorNotAvailable(e);\n  }\n  var lines = output.split(\"\\n\");\n  var result = {\n    devices: [],\n    templates: [],\n  };\n  var bucket;\n  for (var line of lines) {\n    if (line === 'Known Devices:') {\n      bucket = 'devices';\n    } else if (line === 'Known Templates:') {\n      bucket = 'templates';\n    } else {\n      if (line) {\n        if (bucket) {\n          if (bucket === 'devices') {\n            var m = line.match(/^([^\\[]*) \\[([0-9A-F-]+)\\]$/);\n            if (m) {\n              result[bucket].push({\n                device: m[1],\n                udid: m[2],\n              });\n            } else {\n              throw SimulatorError('CANT_INTERPRET_OUTPUT', \"Couldn't understand device: \" + line);\n            }\n          } else {\n            result[bucket].push(line);\n          }\n        } else {\n          var err = SimulatorError('CANT_INTERPRET_OUTPUT', \"Couldn't interpret the output from `xcrun instruments -s`\");\n          err.output = output;\n          throw err;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nasync function startSimulatorAsync(udid) {\n  try {\n    var output = await child_process.promise.exec('xcrun instruments -w ' + JSON.stringify(udid));\n  } catch (e) {\n    if (e.code === 255) {\n      return true;\n    } else {\n      throw SimulatorError('FAILED_TO_START_SIMULATOR', \"Failed to start iOS Simulator: \" + e.message);\n    }\n  }\n}\n\nasync function askUserToPickASimulatorAsync() {\n  var devices = await listSimulatorsAsync();\n  var choices = [];\n  for (var device of devices) {\n    choices.push({\n      name: device.device + ' (' + device.runtime + ')',\n      value: device.udid,\n    });\n  }\n\n  choices = _(_.sortBy(choices, 'name')).reverse().valueOf();\n\n  var answers = await inquirerAsync.promptAsync([{\n    type: 'list',\n    message: \"Choose an available device to use\",\n    name: 'udid',\n    choices: choices,\n  }]);\n\n  return answers.udid;\n\n}\n\nfunction exponentAppPath() {\n  return path.join(__dirname, '..', 'Exponent.app');\n}\n\nasync function installExponentOnSimulatorAsync() {\n  return child_process.promise.exec('xcrun simctl install booted ' + JSON.stringify(exponentAppPath()));\n}\n\nasync function openUrlOnSimulatorAsync(url) {\n  return child_process.promise.exec('xcrun simctl openurl booted ' + JSON.stringify(url));\n}\n\nasync function chooseAndStartSimulatorAsync() {\n  var udid = await askUserToPickASimulatorAsync();\n  return await startSimulatorAsync(udid);\n}\n\nasync function openUrlInUserChosenSimulatorAsync(url) {\n  var udid = await askUserToPickASimulatorAsync();\n  await startSimulatorAsync(udid);\n  // TODO: We don't need to install the app every time we open\n  // a URL; only when there is a new version of it, (or the app\n  // hasn't previously been installed)\n  await installExponentOnSimulatorAsync(exponentAppPath());\n  try {\n    await openUrlOnSimulatorAsync(url);\n  } catch (e) {\n    if (e.code === 5) {\n      // This is OK I think\n      log.warn(\"Might not have been able to open URL on simulator\");\n    } else {\n      throw SimulatorError('FAILED_TO_OPEN_URL', \"Couldn't open URL on simulator: \" + url + \"\\n\" + e.message);\n    }\n  }\n  return url;\n}\n\nmodule.exports = {\n  listSimulatorsAndTemplatesAsync,\n  startSimulatorAsync,\n  askUserToPickASimulatorAsync,\n  listSimulatorsAsync,\n  installExponentOnSimulatorAsync,\n  openUrlOnSimulatorAsync,\n  openUrlInUserChosenSimulatorAsync,\n  chooseAndStartSimulatorAsync,\n};\n\nif (require.main === module) {\n  if (process.argv[2]) {\n    openUrlInUserChosenSimulatorAsync(process.argv[2]).then(console.log, console.error);\n  } else {\n    chooseAndStartSimulatorAsync().then(console.log, console.error);\n  }\n  //askUserToPickASimulatorAsync().then(startSimulatorAsync, console.error).then(console.log, console.error);\n}\n"],"sourceRoot":"/source/"}