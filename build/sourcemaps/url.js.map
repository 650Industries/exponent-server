{"version":3,"sources":["url.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEjC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEjC,IAAI,gBAAgB,GAAG,eAAe,CAAC;;AAEvC,SAAS,WAAW,GAAG;AACrB,SAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC;CAC5E;;AAED,IAAI,iBAAiB,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;AAC9C,SAAO,MAAM,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;CAC/D,CAAC,CAAC;;AAEH,IAAI,gBAAgB,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa;AAC1C,SAAO,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,CAAC;CACzD,CAAC,CAAC;;AAEH,IAAI,iBAAiB,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa;AAC3C,MAAI,GAAG,GAAG,MAAM,gBAAgB,EAAE,CAAC;;;AAGnC,MAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9C,MAAI,EAAE,QAAQ,CAAC,UAAU,IAAI,GAAG,CAAA,AAAC,EAAE;AACjC,UAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,GAAG,CAAC,CAAC;GACpD;;AAED,SAAO,GAAG,CAAC;CAEZ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG;AACf,kBAAgB,EAAhB,gBAAgB;AAChB,mBAAiB,EAAjB,iBAAiB;AACjB,mBAAiB,EAAjB,iBAAiB,EAClB,CAAC","file":"url.js","sourcesContent":["/**\n * A module for working with the URL file\n *\n */\n\nvar co = require('co');\nvar fs = require('fs');\nvar instapromise = require('instapromise');\nvar path = require('path');\nvar request = require('request');\n\nvar config = require('./config');\n\nvar DEFAULT_URL_FILE = '.exponent.url';\n\nfunction urlFilePath() {\n  return path.resolve('.', path.join(config.relativePath, DEFAULT_URL_FILE));\n}\n\nvar writeUrlFileAsync = co.wrap(function *(url) {\n  return yield fs.promise.writeFile(urlFilePath(), url, 'utf8');\n});\n\nvar readUrlFileAsync = co.wrap(function *() {\n  return yield fs.promise.readFile(urlFilePath(), 'utf8');\n});\n\nvar getTestedUrlAsync = co.wrap(function *() {\n  var url = yield readUrlFileAsync();\n\n  // Test the URL to make sure that you can visit it\n  var response = yield request.promise.get(url);\n  if (!(response.statusCode == 200)) {\n    throw new Error(\"Problem reading from URL \" + url);\n  }\n  \n  return url;\n\n});\n\nmodule.exports = {\n  readUrlFileAsync,\n  writeUrlFileAsync,\n  getTestedUrlAsync,\n};\n"],"sourceRoot":"/source/"}