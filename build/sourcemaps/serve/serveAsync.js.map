{"version":3,"sources":["serve/serveAsync.js"],"names":[],"mappings":"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","file":"serve/serveAsync.js","sourcesContent":["var crayon = require('@ccheever/crayon');\nvar delayAsync = require('delay-async');\nvar freeportAsync = require('freeport-async');\nvar instapromise = require('instapromise');\nvar network = require('@exponent/network');\nvar ngrok = require('ngrok');\n\nvar config = require('../config');\nvar log = require('../log');\nvar PackagerController = require('./PackagerController');\nvar urlUtil = require('../urlUtil');\n\nmodule.exports = async function (opts) {\n\n  var expSettings = await config.expInfoFile.readAsync();\n  opts = opts || {};\n  var port = opts.port || expSettings.port || await freeportAsync(6080);\n\n  var pc = new PackagerController({port});\n  var pcStart$ = pc.startAsync();\n  var ngrokUrl$ = ngrok.promise.connect({port});\n\n  try {\n    var [_ready, ngrokBaseUrl, lanIp, entryPoint, mainModulePath] = await Promise.all([\n      pc.packagerReady,\n      ngrokUrl$,\n      network.privateIpAsync(),\n      urlUtil.entryPointAsync(),\n      urlUtil.guessMainModulePathAsync(),\n      ]);\n  } catch (e) {\n\n    // Shutdown packager\n    var packagerShutdown$ = new Promise(function (fulfill, reject) {\n      log(\"Attempting to shut down packager (\" + pc._packager.pid + \")...\");\n      pc._packager.on('exit', function (code) {\n        log(\"packager shut down.\");\n        fulfill(code);\n        //console.log(\"process._getActiveRequests()\", process._getActiveRequests().length);\n        //console.log(\"process._getActiveHandles()\", process._getActiveHandles().length);\n      });\n      pc.stopAsync().catch(reject);\n    });\n\n    // Shutdown ngrok\n    var ngrokShutdown$ = new Promise(function (fulfill, reject) {\n      ngrokUrl$.then(function (ngrokBaseUrl) {\n        log(\"Shutting down ngrok...\");\n        return ngrok.promise.disconnect(ngrokBaseUrl).then(function (x) {\n          log(\"ngrok shutdown.\");\n          fulfill(x);\n        }, function (err) {\n          log.error(\"Disconnecting from ngrok failed\", err);\n        });\n      }).catch(function (err) {\n        log.error(\"Failed to shutdown ngrok\", err.message);\n        reject(err);\n      });\n    });\n\n    // TODO: This is really hacky but does let the process terminate\n    Promise.all([packagerShutdown$, ngrokShutdown$]).then(function () {\n      for (var h of process._getActiveHandles()) {\n        if (h.destroy) {\n          h.destroy();\n        }\n      }\n    }).catch(function (err) {\n      log.error(\"Error while shutting down.\");\n    });\n\n\n\n    throw e;\n  }\n\n  var lanBaseUrl = 'http://' + lanIp + ':' + port;\n  var localhostBaseUrl = 'http://localhost:' + port;\n\n  var urlOpts = {entryPoint, mainModulePath};\n  var lanUrl = urlUtil.constructUrlFromBaseUrl(lanBaseUrl, urlOpts);\n  var localhostUrl = urlUtil.constructUrlFromBaseUrl(localhostBaseUrl, urlOpts);\n  var ngrokUrl = urlUtil.constructUrlFromBaseUrl(ngrokBaseUrl, urlOpts);\n\n  var writeInfoFile$ = config.expInfoFile.mergeAsync({\n    port,\n    ngrokBaseUrl, lanBaseUrl, localhostBaseUrl,\n    ngrokUrl, lanUrl, localhostUrl,\n    });\n\n  var [_data, _true, _pc] = await Promise.all([writeInfoFile$, urlUtil.testUrlAsync(localhostUrl)]);\n\n  return _.assign(_data, {packageController: pc});\n\n}\n\nif (require.main === module) {\n  module.exports().then(crayon.cyan.log, (err) => {\n    crayon.red.log(err);\n    // Killing the child_process doesn't seem to work very well,\n    // so this is the robust way to do it\n  });\n}\n"],"sourceRoot":"/source/"}