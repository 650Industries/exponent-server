{"version":3,"sources":["serve/WebpackController.js"],"names":[],"mappings":"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","file":"serve/WebpackController.js","sourcesContent":["var freeportAsync = require('freeport-async');\nvar ReactNativeWebpackServer = require('react-native-webpack-server');\nvar webpack = require('webpack');\n\nvar urlUtil = require('../urlUtil');\n\n\nasync function getConfigAsync(opts) {\n\n  opts = opts || {};\n\n  opts.mainModulePath = opts.mainModulePath || await urlUtil.guessMainModulePathAsync();\n  opts.entryPoint = opts.entryPoint || await urlUtil.entryPointAsync();\n  var entry = {};\n  entry[opts.mainModulePath] = opts.entryPoint;\n  opts.entry = opts.entry || entry;\n\n  var config = {\n\n    debug: true,\n\n    devtool: 'source-map',\n\n    entry: entry,\n\n    output: {\n      path: path.resolve(__dirname, 'build'),\n      filename: '[name].js',\n    },\n\n    module: {\n      loaders: [\n        {test: /\\.js$/, exclude: /node_modules/, loaders: ['babel?stage=0&blacklist=validation.react']},\n      ],\n    },\n\n    plugins: [],\n\n  };\n\n  // Hot loader\n  if (opts.hot) {\n    config.devtool = 'eval'; // Speed up incremental builds\n    config.entry['index.ios'].unshift('../../hot/entry');\n    config.entry['index.ios'].unshift('webpack/hot/only-dev-server');\n    config.entry['index.ios'].unshift('webpack-dev-server/client?http://localhost:8082');\n    config.output.publicPath = 'http://localhost:8082/';\n    config.module.loaders[0].loaders.unshift('react-hot');\n    config.plugins.unshift(new webpack.HotModuleReplacementPlugin());\n  }\n\n  // Production config\n  if (opts.production) {\n    config.plugins.push(new webpack.optimize.OccurrenceOrderPlugin());\n    config.plugins.push(new webpack.optimize.UglifyJsPlugin());\n  }\n\n  return config;\n\n}\n\nasync function createServerAsync(opts) {\n\n  opts = opts || {};\n  opts.port = opts.port || 9000;\n\n  /**\n   * Create a new server with the following options:\n   * {String} hostname (default localhost)\n   * {Number} port (default 8080)\n   * {Number} packagerPort (default 8081)\n   * {Number} webpackPort (default 8082)\n   * {String} entry (default index.ios)\n   * {Object} webpackConfig (default require(./webpack.config.js))\n   * {Boolean} hot enable react-hot-loader (default false)\n   *\n   * @constructor\n   * @param {Object} options\n   */\n\n  var [port, packagerPort, webpackPort] = await freeportAsync.rangeAsync(3, opts.port);\n  port = opts.port || port;\n  packagerPort = opts.packagerPort || packagerPort;\n  webpackPort = opts.webpackPort || webpackPort;\n\n  var webpackConfig = await getConfigAsync(opts);\n\n  return new ReactNativeWebpackServer({\n    webpackConfig,\n    port,\n    packagerPort,\n    webpackPort,\n  });\n\n}\n\nmodule.exports = {\n  createServerAsync,\n  getConfigAsync,\n};\n"],"sourceRoot":"/source/"}