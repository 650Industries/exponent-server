{"version":3,"sources":["urlUtil.js"],"names":[],"mappings":"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","file":"urlUtil.js","sourcesContent":["/**\n * A module for working with the URL file\n *\n */\n\nvar co = require('co');\nvar fs = require('fs');\nvar instapromise = require('instapromise');\nvar jsonParseAsync = require('@exponent/json-parse-async');\nvar path = require('path');\nvar request = require('request');\n\nvar api = require('./api');\nvar config = require('./config');\n\nvar DEFAULT_URL_FILE = '.exponent.url';\n\nvar entryPointAsync = async function() {\n  var pkg = await jsonParseAsync('package.json');\n  var entryPoint = pkg.main || 'index.js';\n  return entryPoint;\n}\n\nvar guessMainModulePathAsync = async function () {\n  var entryPoint = await entryPointAsync();\n  return entryPoint.replace(/\\.js$/, '');\n}\n\nfunction urlFilePath() {\n  return path.resolve('.', path.join(config.relativePath, DEFAULT_URL_FILE));\n}\n\nvar writeUrlFileAsync = co.wrap(function *(url) {\n  return yield fs.promise.writeFile(urlFilePath(), url, 'utf8');\n});\n\nvar readUrlFileAsync = co.wrap(function *() {\n  return yield fs.promise.readFile(urlFilePath(), 'utf8');\n});\n\nfunction constructUrlFromBaseUrl(baseUrl, opts) {\n  var url = baseUrl;\n  opts = opts || {};\n  var {mainModulePath, dev, minify} = opts;\n  mainModulePath = mainModulePath || 'index.js';\n  url += '/' + encodeURIComponent(mainModulePath) + '.';\n  if (opts.includeRequire !== false) {\n    url += encodeURIComponent('includeRequire.');\n  }\n  if (opts.runModule !== false) {\n    url += encodeURIComponent('runModule.');\n  }\n  url += 'bundle';\n  url += '?dev=' + encodeURIComponent(!!dev);\n  if (minify != null) {\n    url += '&minify=' + encodeURIComponent(!!minify);\n  }\n  return url;\n}\n\nvar constructUrlAsync = async function (opts) {\n  var baseUrl = await readUrlFileAsync();\n  opts = opts || {};\n  opts.mainModulePath = opts.mainModulePath || await guessMainModulePathAsync();\n  return constructUrlFromBaseUrl(baseUrl, opts);\n};\n\nvar mainBundleUrlAsync = co.wrap(function *(opts) {\n  return yield constructUrlAsync(opts);\n});\n\nvar getTestedMainBundleUrlAsync = co.wrap(function *(opts) {\n  var url = yield mainBundleUrlAsync(opts);\n  //console.log(\"Testing url \" + url);\n  return yield testUrlAsync(url);\n});\n\nvar testUrlAsync = co.wrap(function *(url) {\n  var response = yield request.promise.get(url);\n  if (!(response.statusCode == 200)) {\n    throw new Error(\"Problem reading from URL \" + url + \"\\nstatusCode=\" + response.statusCode);\n  }\n  return url;\n});\n\nfunction expUrlFromHttpUrl(url) {\n  return ('' + url).replace(/^http(s?)/,'exp');\n}\n\nfunction sendUrlAsync(recipient, expUrl) {\n  return api.callMethodAsync('send', [recipient, expUrl]);\n}\n\nmodule.exports = {\n  expUrlFromHttpUrl,\n  readUrlFileAsync,\n  writeUrlFileAsync,\n  getTestedMainBundleUrlAsync,\n  mainBundleUrlAsync,\n  sendUrlAsync,\n  testUrlAsync,\n  entryPointAsync,\n  guessMainModulePathAsync,\n};\n"],"sourceRoot":"/source/"}