{"version":3,"sources":["commands/help.js"],"names":[],"mappings":"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","file":"commands/help.js","sourcesContent":["var crayon = require('@ccheever/crayon');\nvar windowSize = require('window-size');\nvar wordwrap = require('wordwrap');\n\nvar CommandError = require('./CommandError');\nvar commands = require('./commands');\n\nfunction showHelp(command) {\n  var argsString = command.args ? command.args.join(' ') : '';\n  console.error(\"Usage: exp \" + command.name + \" \" + argsString);\n  console.error();\n  if (command.description) {\n    console.error(wordwrap(windowSize.width)(command.description));\n    console.error();\n  }\n  if (command.options) {\n    var longest = 0;\n    for (var option of command.options) {\n      var [o, d, def] = option;\n      if (o.length > longest) {\n        longest = o.length;\n      }\n    }\n    var prefix = '    ';\n    for (var option of command.options) {\n      var [o, d, def] = option;\n      console.error(prefix + o + _spaces(longest - o.length) + '  ' + _indentHelp(d, prefix.length + longest + 2));\n    }\n    console.error();\n  }\n  if (command.help) {\n    console.error(\"  \" + _indentHelp(command.help, 2));\n  }\n}\n\nfunction _indentHelp(help, ind) {\n  var maxWidth = windowSize.width;\n  if (ind > maxWidth - 6) {\n    return \"\\n\" + help + \"\\n\";\n  }\n  var wrapped = wordwrap(maxWidth - ind)(help);\n  var lines = wrapped.split(\"\\n\");\n  var s = '';\n  for (var i = 0; i < lines.length; i++) {\n    if (i > 0) {\n      for (var j = 0; j < ind; j++) {\n        s += ' ';\n      }\n    }\n    s += lines[i] + \"\\n\";\n  }\n  // s = s.trim();\n  return s;\n}\n\nfunction _spaces(n) {\n  var s = '';\n  for (var i = 0; i < n; i++) {\n    s += ' ';\n  }\n  return s;\n}\n\nmodule.exports = {\n  name: 'help',\n  description: \"Shows help for `exp` or for a given command.\",\n  args: [\"[command]\"],\n  options: [\n  ],\n  help: \"You can also do `exp <command> --help` for any command or `exp --help` to get help\",\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n\n    var cmd = args[0];\n    var command = {\n    };\n    if (cmd) {\n      if (cmd === 'help') {\n        command = module.exports;\n      } else {\n        command = commands[cmd];\n      }\n      if (!command) {\n        throw CommandError('UNKNOWN_COMMAND', env, \"No such command: \" + cmd);\n      }\n      showHelp(command);\n    } else {\n      var commandKeys = Object.keys(commands);\n      var script = env.script || 'exp';\n      console.error(\n        \"Usage: \" + script + \" <command>\\n\" +\n        \"\\n\" +\n        \"where <command> is one of:\\n\" +\n        \"    \" + commandKeys.join(', ') + \"\\n\" +\n        \"\\n\");\n\n      var prefix = '    exp ';\n      var longest = 0;\n      for (var key of commandKeys) {\n        var command = commands[key];\n        if (command.name.length > longest) {\n          longest = command.name.length;\n        }\n      }\n      var ind = prefix.length + longest + 2;\n      for (var i = -1; i < commandKeys.length; i++) {\n        var command;\n        if (i === -1) {\n          command = module.exports;\n        } else {\n          var key = commandKeys[i];\n          command = commands[key];\n        }\n        console.error(prefix + command.name + _spaces(longest - command.name.length + 2) + _indentHelp(command.description, ind));\n      }\n    }\n  },\n};\n"],"sourceRoot":"/source/"}