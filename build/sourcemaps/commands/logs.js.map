{"version":3,"sources":["commands/logs.js"],"names":[],"mappings":";;;;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAEzB,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAErC,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,MAAM;AACZ,aAAW,EAAE,iDAAiD;AAC9D,MAAI,EAAE,CAAC,mBAAmB,CAAC;AAC3B,SAAO,EAAE,CACP,CAAC,SAAS,EAAE,uCAAuC,EAAE,GAAG,CAAC,EACzD,CAAC,OAAO,EAAE,mCAAmC,CAAC,CAC/C;AACD,UAAQ,oBAAE,WAAgB,GAAG,EAAE;AAC7B,QAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,QAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;AAElB,UAAM,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AACpC,QAAI,KAAK,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC7D,QAAI,CAAC,KAAK,EAAE;AACV,YAAM,YAAY,CAAC,WAAW,EAAE,GAAG,EAAE,wDAAuD,CAAC,CAAC;KAC/F;;AAED,QAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;;AAE7B,OAAG,CAAC,mCAAmC,CAAC,CAAC;;AAEzC,UAAM,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AAC5B,OAAG,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAE1C,CAAA,EACF,CAAC","file":"commands/logs.js","sourcesContent":["var crayon = require('@ccheever/crayon');\nvar pm2 = require('pm2');\n\nvar CommandError = require('./CommandError');\nvar config = require('../config');\nvar log = require('../log');\nvar pm2serve = require('./pm2serve');\n\nmodule.exports = {\n  name: 'logs',\n  description: \"Streams the exp-serve logs to a terminal window\",\n  args: ['[path-to-project]'],\n  options: [\n    ['--lines', \"Number of lines of history to go back\", 200],\n    ['--raw', \"View raw logs (with no prefixing)\"],\n  ],\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n\n    await pm2serve.setupServeAsync(env);\n    var pm2Id = await config.expInfoFile.getAsync('pm2Id', null);\n    if (!pm2Id) {\n      throw CommandError('NO_PM2_ID', env, \"I can't find a server; try running `exp start` first.\");\n    }\n\n    var lines = argv.lines || 50;\n\n    log(\"Use Ctrl-C to stop streaming logs\");\n    \n    await pm2.promise.connect();\n    pm2.streamLogs(pm2Id, lines, !!argv.raw);\n\n  },\n};\n"],"sourceRoot":"/source/"}