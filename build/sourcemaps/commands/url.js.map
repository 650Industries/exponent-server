{"version":3,"sources":["commands/url.js"],"names":[],"mappings":";;;;;;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAChD,IAAI,aAAa,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;;AAExD,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEpC,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,KAAK;AACX,MAAI,EAAE,CAAC,aAAa,CAAC;AACrB,SAAO,GACL,CAAC,UAAU,EAAE,mEAAmE,CAAC,EACjF,CAAC,MAAM,EAAE,0CAA0C,CAAC,EACpD,CAAC,QAAQ,EAAE,yCAAyC,CAAC,4BACjD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAC7B;AACD,aAAW,EAAE,0FAAyF;AACtG,MAAI,EAAE,2DAA2D;AACjE,UAAQ,oBAAE,WAAgB,GAAG,EAAE;AAC7B,QAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,QAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,IAAI,CAAC;;AAEf,QAAI,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,EAAC,IAAI,EAAC,OAAO,EAAC,CAAC,CAAC;;AAElD,QAAI;AACF,UAAI,OAAO,GAAG,MAAM,OAAO,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;KACpD,CAAC,OAAO,CAAC,EAAE;AACV,YAAM,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,oFAAmF,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;KACpI;;AAED,QAAI,GAAG,GAAG,OAAO,CAAC;AAClB,QAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,SAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;KACtC;;AAED,WAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEjB,QAAI,IAAI,CAAC,EAAE,EAAE;AACX,oBAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC9B;;AAED,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,QAAI,IAAI,EAAE;AACR,UAAI;AACF,WAAG,CAAC,4BAA4B,CAAC,CAAC;AAClC,qBAAa,CAAC,KAAK,EAAE,CAAC;AACtB,YAAI,EAAE,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC7C,qBAAa,CAAC,IAAI,EAAE,CAAC;AACrB,WAAG,CAAC,KAAK,CAAC,CAAC;OACZ,CAAC,OAAO,CAAC,EAAE;AACV,cAAM,YAAY,CAAC,qBAAqB,EAAE,GAAG,EAAE,gDAAgD,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;OAC9G;KACF;;AAED,QAAI,SAAS,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEvC,QAAI,SAAS,EAAE;AACb,YAAM,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;KAC3C;;AAED,WAAO,GAAG,CAAC;GAEZ,CAAA,EACF,CAAC","file":"commands/url.js","sourcesContent":["var crayon = require('@ccheever/crayon');\nvar qrcodeTerminal = require('qrcode-terminal');\nvar simpleSpinner = require('@exponent/simple-spinner');\n\nvar CommandError = require('./CommandError');\nvar log = require('../log');\nvar sendTo = require('./sendTo');\nvar urlOpts = require('./urlOpts');\nvar urlUtil = require('../urlUtil');\n\nmodule.exports = {\n  name: 'url',\n  args: ['[recipient]'],\n  options: [\n    ['--sendTo', \"Specifies the mobile number or e-mail address to send this URL to\"],\n    ['--qr', \"Will also generate a QR code for the URL\"],\n    ['--test', \"Will test to make sure the URL is valid\"],\n    ...(urlOpts.options('ngrok')),\n  ],\n  description: \"Sends a link you can load the app you're developing to a phone number or e-mail address\",\n  help: \"You must have the server running for this command to work\",\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n    var err = null;\n\n    var uo = urlOpts.optsFromEnv(env, {type:'ngrok'});\n\n    try {\n      var httpUrl = await urlUtil.mainBundleUrlAsync(uo);\n    } catch (e) {\n      throw CommandError('NO_URL', env, \"There doesn't seem to be a URL for this package. Try running `exp start` first.\\n\" + e.message);\n    }\n\n    var url = httpUrl;\n    if (!argv.http) {\n      url = urlUtil.expUrlFromHttpUrl(url);\n    }\n\n    console.log(url);\n\n    if (argv.qr) {\n      qrcodeTerminal.generate(url);\n    }\n\n    var test = argv.test;\n    if (test) {\n      try {\n        log(\"Testing loading the URL...\");\n        simpleSpinner.start();\n        var ok = await urlUtil.testUrlAsync(httpUrl);\n        simpleSpinner.stop();\n        log(\"OK.\");\n      } catch (e) {\n        throw CommandError('RUN_EXP_START_FIRST', env, \"You may need to run `exp start` to get a URL\\n\" + e.message);\n      }\n    }\n\n    var recipient = argv.sendTo || args[1];\n\n    if (recipient) {\n      await sendTo.sendUrlAysnc(url, recipient);\n    }\n\n    return url;\n\n  },\n};\n"],"sourceRoot":"/source/"}