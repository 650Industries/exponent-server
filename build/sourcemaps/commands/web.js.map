{"version":3,"sources":["commands/web.js"],"names":[],"mappings":";;;;AAAA,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAChD,IAAI,aAAa,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;;AAExD,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEpC,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,KAAK;AACX,SAAO,EAAE,CACP,CAAC,QAAQ,EAAE,yCAAyC,CAAC,CACtD;AACD,aAAW,EAAE,oEAAoE;AACjF,MAAI,EAAE,2FAA2F,GAC/F,qFAAqF;AACvF,UAAQ,oBAAE,WAAgB,GAAG,EAAE;AAC7B,QAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,QAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,IAAI,CAAC;;AAGf,QAAI,GAAG,GAAG,MAAM,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAI,WAAW,GAAG,OAAM,MAAM,OAAO,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAA,CAAC;;AAGxE,QAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,QAAI,IAAI,EAAE;AACR,SAAG,CAAC,4BAA4B,CAAC,CAAC;AAClC,mBAAa,CAAC,KAAK,EAAE,CAAC;AACtB,UAAI;AACF,YAAI,EAAE,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;OAC9C,CAAC,OAAO,CAAC,EAAE;AACV,cAAM,YAAY,CAAC,qBAAqB,EAAE,GAAG,EAAE,gDAAgD,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;OAC9G,SAAS;AACR,qBAAa,CAAC,IAAI,EAAE,CAAC;OACtB;AACD,SAAG,CAAC,KAAK,CAAC,CAAC;KACZ;;AAED,OAAG,CAAC,qCAAqC,CAAC,CAAC;AAC3C,WAAO,CAAC,GAAG,EAAE,CAAC;AACd,WAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAC3C,WAAO,CAAC,GAAG,EAAE,CAAC;;AAEd,QAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACjC,UAAI,MAAM,GAAG,MAAM,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;KAC1F,MAAM;AACL,SAAG,CAAC,KAAK,CAAC,uFAAuF,CAAC,CAAC;KACpG;;AAED,WAAO,WAAW,CAAC;GAEpB,CAAA,EACF,CAAC","file":"commands/web.js","sourcesContent":["var child_process = require('child_process');\nvar crayon = require('@ccheever/crayon');\nvar instapromise = require('instapromise');\nvar qrcodeTerminal = require('qrcode-terminal');\nvar simpleSpinner = require('@exponent/simple-spinner');\n\nvar CommandError = require('./CommandError');\nvar log = require('../log');\nvar sendTo = require('./sendTo');\nvar urlOpts = require('./urlOpts');\nvar urlUtil = require('../urlUtil');\n\nmodule.exports = {\n  name: 'web',\n  options: [\n    ['--test', \"Will test to make sure the URL is valid\"],\n  ],\n  description: \"Opens your article in a web simulator you can view in your browser\",\n  help: \"You must have the server running for this command to work. This command will also display\" +\n    \" a URL you can copy/paste and send to other people to view on their computers, etc.\",\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n    var err = null;\n\n\n    var url = await urlUtil.urlFromEnvAsync(env);\n    var appetizeUrl = await await urlUtil.appetizeWebSimulatorUrlAsync(url);\n\n\n    var test = argv.test;\n    if (test) {\n      log(\"Testing loading the URL...\");\n      simpleSpinner.start();\n      try {\n        var ok = await urlUtil.testUrlAsync(httpUrl);\n      } catch (e) {\n        throw CommandError('RUN_EXP_START_FIRST', env, \"You may need to run `exp start` to get a URL\\n\" + e.message);\n      } finally {\n        simpleSpinner.stop();\n      }\n      log(\"OK.\");\n    }\n\n    log(\"Opening article in web simulator...\");\n    console.log();\n    console.log(crayon.underline(appetizeUrl));\n    console.log();\n\n    if (process.platform === 'darwin') {\n      var result = await child_process.promise.exec(\"open \" + appetizeUrl, {stdio: 'inherit'});\n    } else {\n      log.error(\"Sorry, opening the URL for the web simulator automatically only works on Mac for now.\");\n    }\n\n    return appetizeUrl;\n\n  },\n};\n"],"sourceRoot":"/source/"}