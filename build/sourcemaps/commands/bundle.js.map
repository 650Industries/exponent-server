{"version":3,"sources":["commands/bundle.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEjC,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEpC,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,QAAQ;AACd,aAAW,EAAE,gEAAgE;AAC7E,SAAO,EAAE,CACP,CAAC,OAAO,EAAE,6BAA6B,CAAC,EACxC,CAAC,UAAU,EAAE,8BAA8B,CAAC,EAC5C,CAAC,kBAAkB,EAAE,yBAAyB,CAAC,CAChD;AACD,MAAI,EAAE,EAAE;AACR,UAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE;AAChC,QAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,QAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;AAGlB,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;AAC3B,QAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,QAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;;AAEzC,QAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,QAAI,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC;AAC/B,QAAI,QAAQ,EAAE;AACZ,eAAS,GAAG,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;KAC5C;;AAED,QAAI,GAAG,GAAG,MAAM,OAAO,CAAC,kBAAkB,CAAC,EAAC,GAAG,EAAH,GAAG,EAAE,MAAM,EAAN,MAAM,EAAE,cAAc,EAAd,cAAc,EAAC,CAAC,CAAC;AAC1E,OAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;AACnC,QAAI,QAAQ,EAAE;AACZ,SAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;KAC5B;;AAED,QAAI;AACF,UAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9C,UAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;AAC9B,cAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;OAC7F;KACF,CAAC,OAAO,CAAC,EAAE;AACV,YAAM,IAAI,KAAK,CAAC,uDAAuD,GAAG,CAAC,CAAC,CAAC;KAC9E;;AAED,QAAI,KAAK,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzD,QAAI,QAAQ,EAAE;AACZ,eAAS,CAAC,KAAK,EAAE,CAAC;KACnB;;AAED,QAAI,MAAM,GAAG;AACX,SAAG,EAAE,IAAI;AACT,SAAG,EAAH,GAAG;AACH,WAAK,EAAL,KAAK,EACN,CAAC;;AAEF,QAAI,QAAQ,EAAE;AACZ,YAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;KAC3B;;AAED,WAAO,MAAM,CAAC;GAEf,CAAC,EACH,CAAC","file":"commands/bundle.js","sourcesContent":["var co = require('co');\nvar crayon = require('@ccheever/crayon');\nvar fs = require('fs');\nvar instapromise = require('instapromise');\nvar request = require('request');\n\nvar log = require('../log');\nvar urlUtil = require('../urlUtil');\n\nmodule.exports = {\n  name: 'bundle',\n  description: \"Saves the current bundle of your app to the terminal or a file\",\n  options: [\n    ['--dev', \"Whether to set the dev flag\"],\n    ['--minify', \"Whether to minify the bundle\"],\n    ['--mainModulePath', \"Path to the main module\"],\n  ],\n  help: '',\n  runAsync: co.wrap(function *(env) {\n    var argv = env.argv;\n    var args = argv._;\n\n\n    var dev = argv.dev || true;\n    var minify = argv.minify;\n    var mainModulePath = argv.mainModulePath;\n\n    var filepath = args[1];\n    var outStream = process.stdout;\n    if (filepath) {\n      outStream = fs.createWriteStream(filepath);\n    }\n\n    var url = yield urlUtil.mainBundleUrlAsync({dev, minify, mainModulePath});\n    log(\"Requesting bundle from\", url);\n    if (filepath) {\n      log(\"Saving to\", filepath);\n    }\n\n    try {\n      var response = yield request.promise.get(url);\n      if (response.statusCode != 200) {\n        throw new Error(\"Non-200 response: \" + response.statusCode + \": \" + response.statusMessage);\n      }\n    } catch (e) {\n      throw new Error(\"Failed to download bundle; did you run `exp serve`?\\n\" + e);\n    }\n\n    var bytes = yield outStream.promise.write(response.body);\n    if (filepath) {\n      outStream.close();\n    }\n\n    var result = {\n      err: null,\n      url,\n      bytes,\n    };\n\n    if (filepath) {\n      result.savedTo = filepath;\n    }\n\n    return result;\n\n  }),\n};\n"],"sourceRoot":"/source/"}