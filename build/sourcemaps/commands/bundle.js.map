{"version":3,"sources":["commands/bundle.js"],"names":[],"mappings":"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","file":"commands/bundle.js","sourcesContent":["var _ = require('lodash-node');\nvar co = require('co');\nvar crayon = require('@ccheever/crayon');\nvar fs = require('fs');\nvar instapromise = require('instapromise');\nvar needle = require('needle');\nvar simpleSpinner = require('@exponent/simple-spinner');\n\nvar CommandError = require('./CommandError');\nvar log = require('../log');\nvar urlUtil = require('../urlUtil');\nvar urlOpts = require('./urlOpts');\n\nmodule.exports = {\n  name: 'bundle',\n  description: \"Saves the current bundle of your app to the terminal or a file\",\n  options: [\n    ['--dev', \"Whether to set the dev flag\"],\n    ['--minify', \"Whether to minify the bundle\"],\n    ['--mainModulePath', \"Path to the main module\"],\n    ...(urlOpts.options('localhost')),\n  ],\n  help: '',\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n\n    var uo = urlOpts.optsFromEnv(env, {type: 'localhost', dev: true});\n\n    var filepath = args[1];\n    var outStream = process.stdout;\n    if (filepath) {\n      outStream = fs.createWriteStream(filepath);\n    }\n\n    var url = await urlUtil.mainBundleUrlAsync(uo);\n    log(\"Requesting bundle from\", url, \"...\");\n    if (filepath) {\n      log(\"Saving to\", filepath);\n    }\n\n    try {\n\n      simpleSpinner.start();\n      try {\n        var response = await needle.promise.get(url);\n      } catch (e) {\n        throw CommandError('NO_RESPONSE', env, \"Server didn't respond.\\n\" + e.message);\n      } finally {\n        simpleSpinner.stop();\n      }\n\n      if (response.statusCode != 200) {\n        if (_.isObject(response.body)) {\n          var errInfo = response.body;\n          log.error(errInfo.type, errInfo.message);\n          console.error(errInfo.snippet);\n          if (errInfo.type) {\n            throw CommandError(errInfo.type, env, \"Error in generating bundle\");\n          }\n        } else {\n          log.error(\"Uknown Error:\", response.body);\n        }\n        throw CommandError('BAD_RESPONSE', env, \"Non-200 response: \" + response.statusCode + \": \" + response.statusMessage);\n      }\n    } catch (e) {\n      if (e._isCommandError) {\n        throw e;\n      } else {\n        throw CommandError('FAILED_TO_DOWNLOAD_BUNDLE', env, \"Failed to download bundle; did you run `exp start`?\\n\" + e);\n      }\n    }\n\n    await outStream.promise.write(response.body);\n    var bytes = response.body.length;\n    if (filepath) {\n      outStream.close();\n    }\n\n    var result = {\n      err: null,\n      url,\n      bytes,\n    };\n\n    if (filepath) {\n      result.savedTo = filepath;\n    }\n\n    return result;\n\n  },\n};\n"],"sourceRoot":"/source/"}