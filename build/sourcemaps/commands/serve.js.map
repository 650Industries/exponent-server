{"version":3,"sources":["commands/serve.js"],"names":[],"mappings":"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","file":"commands/serve.js","sourcesContent":["var child_process = require('child_process');\nvar co = require('co');\nvar crayon = require('@ccheever/crayon');\nvar instapromise = require('instapromise');\nvar ngrok = require('ngrok');\nvar path = require('path');\n\nvar config = require('../config');\nvar log = require('../log');\nvar urlUtil = require('../urlUtil');\nvar userSettings = require('../userSettings');\n\nmodule.exports = {\n  name: 'serve',\n  description: \"Starts a local server to serve your app and gives you a URL to it\",\n  options: [\n    ['--path', \"The path to the place where your package is\", '.'],\n    ['--port', \"The port to run the server on\", \"Random (9000-9999)\"],\n    ['--ngrokSubdomain', \"The ngrok subdomain to use\", (config.ngrok && config.ngrok.subdomain)],\n    ['--ngrokAuthToken', \"The ngrok authToken to use\", (config.ngrok && config.ngrok.authToken)],\n    ['--send', \"An e-mail address or phone number to send a link to\"]\n  ],\n  help: \"Starts a local server to serve your app and gives you a URL to it\",\n  runAsync: co.wrap(function *(env) {\n      var argv = env.argv;\n      var args = argv._;\n\n      var ngrokSubdomain = argv['ngrok-subdomain'] || (config.ngrok && config.ngrok.subdomain) || undefined;\n      var ngrokAuthToken = argv['ngrok-auth-token'] || (config.ngrok && config.ngrok.authToken) || undefined;\n\n      var port = argv.port;\n      if (port == null) {\n        port = 9000 + Math.floor(Math.random() * 1000);\n      }\n\n      var urlP = ngrok.promise.connect({\n        port: port,\n        authtoken: ngrokAuthToken,\n        subdomain: ngrokSubdomain,\n      });\n\n      //var root = path.resolve(__dirname, '..', '..');\n      var root = config.absolutePath;\n      var packager = child_process.spawn(config.packagerPath, [\"--port=\" + port, \"--root=\" + root, \"--assetRoots=\" + root,], {\n        stdio: [process.stdin, process.stdout, process.stderr],\n      });\n\n      var url = yield urlP;\n      // Store the URL in a file\n      yield urlUtil.writeUrlFileAsync(url);\n\n      log(\"Started packager and ngrok\");\n      log(\"Your URL is\\n\" + crayon.bold(url) + \"\\n\");\n\n  }),\n};\n"],"sourceRoot":"/source/"}