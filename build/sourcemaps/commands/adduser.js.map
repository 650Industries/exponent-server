{"version":3,"sources":["commands/adduser.js"],"names":[],"mappings":"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","file":"commands/adduser.js","sourcesContent":["var _ = require('lodash-node');\nvar co = require('co');\nvar instapromise = require('instapromise');\nvar inquirer = require('inquirer');\n\nvar api = require('../api');\nvar password = require('../password');\nvar userSettings = require('../userSettings');\n\nmodule.exports = {\n  name: 'adduser',\n  description: \"Creates a user on exp.host\",\n  help: \"\",\n  runAsync: co.wrap(function *(env) {\n    var argv = env.argv;\n    var args = argv._;\n    var [_cmd, username, cleartextPassword, email, phoneNumber] = args;\n    username = username || argv.username;\n    cleartextPassword = cleartextPassword || argv.password\n    email = email || argv.email;\n    phoneNumber = phoneNumber || argv.phoneNumber;\n\n    var settingsData = yield userSettings.readFileAsync();\n\n    var questions = [];\n\n    if (!username) {\n      questions.push({\n        type: 'input',\n        name: 'username',\n        message: 'username',\n        default: settingsData.username,\n        validate: function (val) {\n          // TODO: Validate username here\n          return true;\n        },\n      });\n    }\n\n    if (!cleartextPassword) {\n      questions.push({\n        type: 'password',\n        name: 'cleartextPassword',\n        message: 'password',\n        validate: function (val) {\n          // TODO: Validate\n          return true;\n        },\n      });\n    }\n\n    if (!email) {\n      questions.push({\n        type: 'input',\n        name: 'email',\n        message: \"E-mail address\",\n        default: settingsData.email,\n      });\n    }\n\n    if (!phoneNumber) {\n      questions.push({\n        type: 'input',\n        name: 'phoneNumber',\n        message: 'Mobile phone number',\n        default: settingsData.phoneNumber,\n      });\n    }\n\n    inquirer.prompt(questions, function (answers) {\n      var data = {\n        username: username || answers.username,\n        cleartextPassword: cleartextPassword || answers.cleartextPassword,\n        email: email || answers.email,\n        phoneNumber: phoneNumber || answers.phoneNumber,\n      };\n\n      // Store only the hashed version of someone's password\n      data.hashedPassword = password.hashPassword(data.cleartextPassword);\n      delete data.cleartextPassword;\n      console.log(\"data=\", data);\n      // TODO: Call the API. Write the settings file\n\n      api.callMethodAsync('adduser', data);\n    });\n\n  }),\n};\n"],"sourceRoot":"/source/"}