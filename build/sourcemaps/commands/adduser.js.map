{"version":3,"sources":["commands/adduser.js"],"names":[],"mappings":"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","file":"commands/adduser.js","sourcesContent":["var _ = require('lodash-node');\nvar inquirerAsync = require('inquirer-async');\n\nvar api = require('../api');\nvar CommandError = require('./CommandError');\nvar log = require('../log');\nvar password = require('../password');\nvar userSettings = require('../userSettings');\n\nmodule.exports = {\n  name: 'adduser',\n  description: \"Creates a user on exp.host\",\n  help: \"\",\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n    var [_cmd, username, cleartextPassword, fullName, email, phoneNumber] = args;\n    username = username || argv.username;\n    cleartextPassword = cleartextPassword || argv.password\n    email = email || argv.email;\n    phoneNumber = phoneNumber || argv.phoneNumber;\n    fullName = fullName || argv.fullName;\n\n    var settingsData = await userSettings.readAsync();\n\n    var questions = [];\n\n    if (!username) {\n      questions.push({\n        type: 'input',\n        name: 'username',\n        message: 'username',\n        default: settingsData.username,\n        validate: function (val) {\n          // TODO: Validate username here\n          return true;\n        },\n      });\n    }\n\n    if (!cleartextPassword) {\n      questions.push({\n        type: 'password',\n        name: 'cleartextPassword',\n        message: 'password',\n        validate: function (val) {\n          // TODO: Validate\n          return true;\n        },\n      });\n    }\n\n    if (!fullName && !env.isLogin) {\n      questions.push({\n        type: 'input',\n        name: 'fullName',\n        message: 'Full Name',\n        default: settingsData.fullName,\n        validate: function (val) {\n          // TODO: Validate\n          return true;\n        },\n      });\n    }\n\n    if (!email && !env.isLogin) {\n      questions.push({\n        type: 'input',\n        name: 'email',\n        message: \"E-mail address\",\n        default: settingsData.email,\n      });\n    }\n\n    if (!phoneNumber && !env.isLogin) {\n      questions.push({\n        type: 'input',\n        name: 'phoneNumber',\n        message: 'Mobile phone number',\n        default: settingsData.phoneNumber,\n      });\n    }\n\n    // TODO: Make this more of a Promise/yieldable situation so we can continue inline here\n    var answers = await inquirerAsync.promptAsync(questions);\n\n    var data = {\n      username: username || answers.username,\n      cleartextPassword: cleartextPassword || answers.cleartextPassword,\n      email: email || answers.email,\n      phoneNumber: phoneNumber || answers.phoneNumber,\n      fullName: fullName || answers.fullName,\n    };\n\n    // Store only the hashed version of someone's password\n    data.hashedPassword = password.hashPassword(data.cleartextPassword);\n    delete data.cleartextPassword;\n\n    // We're logging in from a non-browser client\n    data.type = 'client';\n\n    var result = await api.callMethodAsync('adduser', data);\n\n    var user = result.user;\n\n    if (user) {\n      user.hashedPassword = data.hashedPassword;\n      await userSettings.mergeAsync(user);\n      delete user.hashedPassword;\n      log(\"Success.\");\n      console.log(user);\n      return result;\n    } else {\n      throw new Error(\"Unexpected Error: No user returned from the API\");\n    }\n\n  },\n};\n"],"sourceRoot":"/source/"}