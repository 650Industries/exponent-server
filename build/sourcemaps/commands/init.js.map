{"version":3,"sources":["commands/init.js"],"names":[],"mappings":"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","file":"commands/init.js","sourcesContent":["let jsonFile = require('@exponent/json-file');\nlet existsAsync = require('exists-async');\nlet fs = require('fs');\nlet fsExtra = require('fs-extra');\nlet mkdirp = require('mkdirp');\nlet path = require('path');\n\nlet TEMPLATE_ROOT = path.resolve(path.join(__dirname, '../../example'));\n\nfunction NewExpError(code, message) {\n  let err = new Error(message);\n  err.code = code;\n  err._isNewExpError;\n  return err;\n}\n\nfunction packageJsonForRoot(root) {\n  return jsonFile(path.join(root, 'package.json'));\n}\n\nasync function determineEntryPoint(root) {\n  let pkgJson = packageJsonForRoot(root);\n  let main = await pkgJson.getAsync('main', 'index.js');\n  // console.log(\"main=\", main);\n  return main;\n}\n\nasync function _getReactNativeVersionAsync() {\n  let xdePackageJson =  jsonFile(path.join(__dirname, '../../package.json'));\n  return await xdePackageJson.getAsync(['dependencies', 'react-native']);\n}\n\nasync function _installReactNativeInNewProjectWithRoot(root) {\n  let nodeModulesPath = path.join(root, 'node_modules');\n  await mkdirp.promise(nodeModulesPath);\n  await fsExtra.copy.promise(path.join(__dirname, '../../node_modules/react-native'), path.join(nodeModulesPath, 'react-native'));\n}\n\nasync function createNewExpAsync(root, info, opts) {\n\n  let pp = path.parse(root);\n  let name = pp.name;\n\n  // opts = opts || {force: true};\n  opts = opts || {};\n\n  // let author = await userSettings.getAsync('email', null);\n  let author = \"TODO\";\n\n  let dependencies = {\n    'react-native': await _getReactNativeVersionAsync(),\n  };\n\n  let data = Object.assign({\n    name,\n    version: '0.0.0',\n    description: \"Hello Exponent!\",\n    main: 'main.js',\n    author,\n    dependencies,\n    //license: \"MIT\",\n    // scripts: {\n    //   \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    // },\n  }, info);\n\n  let pkgJson = jsonFile(path.join(root, 'package.json'));\n\n  let exists = await existsAsync(pkgJson.file);\n  if (exists && !opts.force) {\n    throw NewExpError('WONT_OVERWRITE_WITHOUT_FORCE', \"Refusing to create new Exp because package.json already exists at root\");\n  }\n\n  await mkdirp.promise(root);\n\n  let result = await pkgJson.writeAsync(data);\n\n  await fsExtra.promise.copy(TEMPLATE_ROOT, root);\n\n  // Custom code for replacing __NAME__ in main.js\n  let mainJs = await fs.readFile.promise(path.join(TEMPLATE_ROOT, 'main.js'), 'utf8');\n  let customMainJs = mainJs.replace(/__NAME__/g, data.name);\n  result = await fs.writeFile.promise(path.join(root, 'main.js'), customMainJs, 'utf8');\n\n  // Intall react-native\n  await _installReactNativeInNewProjectWithRoot(root);\n\n  return data;\n\n}\n\nfunction getHomeDir() {\n  return process.env[(process.platform == 'win32') ? 'USERPROFILE' : 'HOME'];\n}\n\nfunction makePathReadable(pth) {\n  let homedir = getHomeDir();\n  if (pth.substr(0, homedir.length) === homedir) {\n    return '~' + pth.substr(homedir.length);\n  } else {\n    return pth;\n  }\n}\n\nasync function expInfoAsync(root) {\n  let pkgJson = packageJsonForRoot(root);\n  let pkg = await pkgJson.readAsync();\n  let name = pkg.name;\n  let description = pkg.description;\n  return {\n    readableRoot: makePathReadable(root),\n    root,\n    name,\n    description,\n  };\n}\n\nasync function expInfoSafeAsync(root) {\n  try {\n    return await expInfoAsync(root);\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = {\n  name: 'init',\n  description: \"Initializes a directory so it can be used with exp\",\n  help: \"Asks you questions and then sets up a directory\",\n  args: ['[path-to-project-dir]'],\n  runAsync: async function (env) {\n    let argv = env.argv;\n    let args = argv._;\n    let dirName = args[1];\n    let originalCwd = process.cwd();\n    let root = dirName || originalCwd;\n    let info = await expInfoSafeAsync(root);\n    let opts = {};\n    opts.force = argv.force;\n    return await createNewExpAsync(root, info, opts);\n  },\n};\n\nObject.assign(module.exports, {\n  determineEntryPoint,\n  createNewExpAsync,\n  _getReactNativeVersionAsync,\n});\n"],"sourceRoot":"/source/"}