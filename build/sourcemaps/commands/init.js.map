{"version":3,"sources":["commands/init.js"],"names":[],"mappings":";;;;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC9C,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;AAElD,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE5B,MAAM,CAAC,OAAO,GAAG;AACf,MAAI,EAAE,MAAM;AACZ,aAAW,EAAE,oDAAoD;AACjE,MAAI,EAAE,iDAAiD;AACvD,MAAI,EAAE,CAAC,uBAAuB,CAAC;AAC/B,UAAQ,oBAAE,WAAgB,GAAG,EAAE;AAC7B,QAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,QAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;;;;AAKlB,QAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB,QAAI,OAAO,EAAE;AACX,YAAM,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9B,SAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAChE,aAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACxB;;;AAGD,QAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AAC3C,QAAI,GAAG,CAAC;AACR,QAAI;AACF,SAAG,GAAG,MAAM,WAAW,CAAC,SAAS,EAAE,CAAC;KACrC,CAAC,OAAO,CAAC,EAAE;;;;AAIV,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC,CAAC;AACzF,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAC,CAAC;AACrF,UAAI,KAAK,GAAG,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;AAClE,SAAG,GAAG,MAAM,WAAW,CAAC,SAAS,EAAE,CAAC;KACrC;;AAED,QAAI,UAAU,GAAG,GAAG,CAAC,IAAI,IAAI,UAAU,CAAC;;;;;AAKxC,QAAI,EAAE,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;AACnG,QAAI;AACF,YAAM,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;AAC3E,SAAG,CAAC,wCAAwC,EAAE,UAAU,CAAC,CAAC;KAC3D,CAAC,OAAO,CAAC,EAAE;AACV,SAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,UAAU,GAAG,4CAA4C,GAAG,CAAC,GAAG,uGAAuG,CAAC,CAAA;KAExM;GAGF,CAAA,EACF,CAAC","file":"commands/init.js","sourcesContent":["var crayon = require('@ccheever/crayon');\nvar fs = require('fs');\nvar instapromise = require('instapromise');\nvar jsonFile = require('@exponent/json-file');\nvar mkdirp = require('mkdirp');\nvar path = require('path');\n\nvar spawnAsync = require('@exponent/spawn-async');\n\nvar CommandError = require('./CommandError');\nvar log = require('../log');\n\nmodule.exports = {\n  name: 'init',\n  description: \"Initializes a directory so it can be used with exp\",\n  help: \"Asks you questions and then sets up a directory\",\n  args: ['[path-to-project-dir]'],\n  runAsync: async function (env) {\n    var argv = env.argv;\n    var args = argv._;\n\n    // Here is what this will do\n\n    // 0. If there is a command line argument, make a new directory in the current directory and chdir to it\n    var dirName = args[1];\n    if (dirName) {\n      await mkdirp.promise(dirName);\n      log(\"Setting up an Exponent project at\", path.resolve(dirName));\n      process.chdir(dirName);\n    }\n\n    // 1. If there is no package.json in the current directory, run npm init\n    var pkgJsonFile = jsonFile('package.json');\n    var pkg;\n    try {\n      pkg = await pkgJsonFile.readAsync();\n    } catch (e) {\n      //console.error(e);\n\n      // No package.json, so let's create it\n      log(crayon.cyan(\"No package.json file found. Using `npm init` to help you create one.\"));\n      log(crayon.cyan(\"Answer the questions and a package.json will be created for you.\"));\n      var _zero = await spawnAsync('npm', ['init'], {stdio: 'inherit'});\n      pkg = await pkgJsonFile.readAsync();\n    }\n\n    var entryPoint = pkg.main || 'index.js';\n\n    // 2. Figure out the entry point of the app. Try to create that file with the template\n    //    ... but fail if it already exist\n\n    var js = await fs.promise.readFile(path.join(__dirname, '..', '..', 'example', 'main.js'), 'utf8');\n    try {\n      await fs.promise.writeFile(entryPoint, js, {encoding: 'utf8', flag: 'wx'});\n      log(\"Created an entry point for your app at\", entryPoint);\n    } catch (e) {\n      log.warn(\"The entry point (\" + entryPoint + \") already exists; refusing to overwrite.\\n\" + e + \"\\nIf you want to use the standard template sample file,\\ndelete that file and rerun `exp init` again.\")\n      //throw CommandError('ENTRY_POINT_EXISTS', env, \"The entry point (\" + entryPoint + \") already exists; refusing to overwrite.\\n\" + e + \"\\nDelete that file and rerun `exp init` to try again.\");\n    }\n\n\n  },\n};\n"],"sourceRoot":"/source/"}