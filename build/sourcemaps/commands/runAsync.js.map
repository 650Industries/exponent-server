{"version":3,"sources":["commands/runAsync.js"],"names":[],"mappings":";;;;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAEzC,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC7C,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE5B,SAAS,UAAU,GAAG;AACpB,MAAI;AACF,WAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;GACvD,CAAC,OAAO,CAAC,EAAE;AACV,WAAO;GACR;CACF;;AAED,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE,IAAI,EAAE;AACvC,MAAI,MAAM,GAAG,UAAU,EAAE,IAAI,KAAK,CAAC;;AAEnC,MAAI,OAAO,IAAI,MAAM,EAAE;AACrB,WAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,QAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAClB;;AAED,MAAI,CAAC,OAAO,EAAE;AACZ,WAAO,IAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAJ,IAAI,EAAC,CAAC,CAAC;GAC9B;;AAED,MAAI,GAAG,CAAC;AACR,MAAI;AACF,OAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;GAC3B,CAAC,OAAO,CAAC,EAAE;AACV,OAAG,GAAG,SAAS,CAAC;GACjB;AACD,MAAI,CAAC,GAAG,IAAI,OAAO,KAAK,MAAM,EAAE;AAC9B,QAAI,GAAG,GAAG,EAAC,IAAI,EAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAC,CAAC;AACxB,QAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACnB,WAAO,SAAQ,MAAM,CAAC,YAAY,CAAC,iBAAiB,EAAE,GAAG,EAAE,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC;GAC5F;;AAED,MAAI,GAAG,CAAC;AACR,MAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,EAAE;AACvB,OAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAJ,IAAI,EAAE,OAAO,EAAP,OAAO,EAAE,MAAM,EAAN,MAAM,EAAC,CAAC,CAAC;GAC9C,MAAM;AACL,OAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAJ,IAAI,EAAC,CAAC,CAAC;GAC5B;;AAED,SAAO,GAAG,CAAC;CAEZ,CAAC","file":"commands/runAsync.js","sourcesContent":["var crayon = require('@ccheever/crayon');\n\nvar CommandError = require('./CommandError');\nvar commands = require('./commands');\nvar help = require('./help');\nvar log = require('../log');\n\nfunction scriptName() {\n  try {\n    return process.argv[1].match(/^.*\\/([^\\/]+)\\.js$/)[1];\n  } catch (e) {\n    return;\n  }\n}\n\nmodule.exports = function(command, argv) {\n  var script = scriptName() || 'exp';\n\n  if (command == 'help') {\n    command = argv._[0];\n    argv._ = argv._.slice(1);\n    argv.help = true;\n  }\n\n  if (!command) {\n    return help.runAsync({argv});\n  }\n\n  var cmd;\n  try {\n    cmd = commands[command]();\n  } catch (e) {\n    cmd = undefined;\n  }\n  if (!cmd && command !== 'help') {\n    var env = {argv:{_:[]}};\n    help.runAsync(env);\n    return Promise.reject(CommandError('UNKNOWN_COMMAND', env, \"No such command: \" + command));\n  }\n\n  var run;\n  if (argv.help || argv.h) {\n    run = help.runAsync({argv, command, script});\n  } else {\n    run = cmd.runAsync({argv});\n  }\n\n  return run;\n\n};\n"],"sourceRoot":"/source/"}